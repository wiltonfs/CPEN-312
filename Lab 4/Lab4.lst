                 -1   $MODDE0CV ; Special Function Registers declaration for CV-8052
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER 0 - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER 0 - HIGH BYTE
0000             24   DPL1   DATA  084H  ;DATA POINTER 1 - LOW BYTE
0000             25   DPH1   DATA  085H  ;DATA POINTER 1 - HIGH BYTE
0000             26   DPS    DATA  086H  ;DATA POINTER SELECT. DPH1, DPL1 active when DPS.0=1
0000             27   PCON   DATA  087H  ;POWER CONTROL
0000             28   TCON   DATA  088H  ;TIMER CONTROL
0000             29   TMOD   DATA  089H  ;TIMER MODE
0000             30   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             31   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             32   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             33   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             34   P1     DATA  090H  ;PORT 1
0000             35   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             36   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             37   P2     DATA  0A0H  ;PORT 2
0000             38   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             39   P3     DATA  0B0H  ;PORT 3
0000             40   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             41   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             42   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             43   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             44   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             45   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             46   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             47   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             48   ACC    DATA  0E0H  ;ACCUMULATOR
0000             49   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             50   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             51   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             52   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             53   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             54   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             55   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             56   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             57   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             58   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             59   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             60   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             61   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             62   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             63   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             64   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             65   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             66   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             67   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             68   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             69   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             70   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             71   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             72   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             73   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             74   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             75   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             76   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             77   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             78   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             79   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             80   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             81   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             82   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             83   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             84   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             85   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             86   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             87   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             88   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             89   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             90   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             91   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             92   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             93   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             94   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             95   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             96   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             97   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             98   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             99   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000            100   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000            101   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000            102   
0000            103   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            104   ; we have the following extra registers:
0000            105   
0000            106   HEX0   DATA  091H ; Zero turns the segment on
0000            107   HEX1   DATA  092H ; 
0000            108   HEX2   DATA  093H ; 
0000            109   HEX3   DATA  094H ; 
0000            110   HEX4   DATA  08EH ;
0000            111   HEX5   DATA  08FH ;
0000            112   HEX6   DATA  096H ;
0000            113   HEX7   DATA  097H ;
0000            114   
0000            115   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            116   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            117   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            118   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            119   
0000            120   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            121   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            122   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            123   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            124   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            125   SWB    DATA  095H ; Switches SW8 to SW15
0000            126   SWC    DATA  09EH ; Switches SW16 and SW17
0000            127   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            128   
0000            129   LCD_CMD   DATA 0D8H ;
0000            130   LCD_DATA  DATA 0D9H ;
0000            131   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            132   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            133   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            134   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            135   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            136   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            137   
0000            138   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            139   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            140   ; bit 1: FL_WE_N
0000            141   ; bit 2: FL_OE_N
0000            142   ; bit 3: FL_CE_N
0000            143   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            144   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            145   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            146   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            147   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            148   
0000              2   
0000              3   org 0000H ; After reset, the processor starts at location zero
0000 020011       4            ljmp main
0003              5   
0003              6   S_TICKS EQU #100
0003              7   M_TICKS EQU #100
0003              8   L_TICKS EQU #90
0003              9   
0003             10   
0003             11   
0003             12   ; Look-up table for my student number
0003             13   ; Least sig to most sig
0003             14   ; 48059760
0003             15   T_StuNum:
0003 40027810    16            DB 40H, 02H, 78H, 10H, 12H, 40H, 00H, 19H
     12400019
000B             17   T_HexDisp:
000B 91929394    18            DB 91H, HEX1, HEX2, HEX3, HEX4, HEX5
     8E8F
0011             19   
                 20   Display_on mac
                 21   	mov b, a ; Preserve value of accumulator
                 22   	
                 23   	mov dptr, #T_StuNum ; point to student number lookup table
                 24   	mov a, %1 ; Load input into accumulator
                 25   	movc a, @dptr+a ; Read from table
                 26   	
                 27   	mov %0, a ; Display number
                 28   
                 29   	mov a, b ; Restore value of accumulator
                 30   endmac
0011             31   
0011             32   main:
0011 75817F      33            mov SP, #0x7f
0014 75E800      34            mov LEDRA, #0 ; Bit addressable
0017 759500      35            mov LEDRB, #0 ; Not bit addressable
001A 7964        36            mov r1, S_TICKS
001C 7A64        37            mov r2, M_TICKS
001E 7B5A        38            mov r3, L_TICKS
0020             39   Forever:
0020             40            ; Latching circuit
0020 20FB02      41            jb key.3, ENDLATCH              ; jump if bit 3 of switch is = 1
0023 A8E8        42            mov r0, SWA                     ; store switch values in r0
0025             43   ENDLATCH: 
0025             44            
0025             45            ; Timing circuit
0025 D955        46            djnz r1, ENDTIME
0027 7964        47            mov r1, S_TICKS         ; if we got here, that means r1 is zero
0029 DA51        48            djnz r2, ENDTIME
002B 7A64        49            mov r2, M_TICKS         ; if we got here, that means r2 is zero
002D DB4D        50            djnz r3, ENDTIME
002F 7B5A        51            mov r3, L_TICKS         ; if we got here, that means r3 is zero
0031             52            ; This line should execute once a second
0031 B2E8        53            cpl LEDRA.0             ;heartbeat
0033             54            
0033 7C00        55            mov r4, #00H
0035 F5F0        56            mov b, a ; Preserve value of accumulator
0037             56            
0037 900003      56            mov dptr, #T_StuNum ; point to student number lookup table
003A EC          56            mov a, r4 ; Load input into accumulator
003B 93          56            movc a, @dptr+a ; Read from table
003C             56            
003C F591        56            mov HEX0, a ; Display number
003E             56   
003E E5F0        56            mov a, b ; Restore value of accumulator
0040 0C          57            inc r4 ; increment r4
0041 F5F0        58            mov b, a ; Preserve value of accumulator
0043             58            
0043 900003      58            mov dptr, #T_StuNum ; point to student number lookup table
0046 EC          58            mov a, r4 ; Load input into accumulator
0047 93          58            movc a, @dptr+a ; Read from table
0048             58            
0048 F592        58            mov HEX1, a ; Display number
004A             58   
004A E5F0        58            mov a, b ; Restore value of accumulator
004C 0C          59            inc r4 ; increment r4
004D F5F0        60            mov b, a ; Preserve value of accumulator
004F             60            
004F 900003      60            mov dptr, #T_StuNum ; point to student number lookup table
0052 EC          60            mov a, r4 ; Load input into accumulator
0053 93          60            movc a, @dptr+a ; Read from table
0054             60            
0054 F593        60            mov HEX2, a ; Display number
0056             60   
0056 E5F0        60            mov a, b ; Restore value of accumulator
0058 0C          61            inc r4 ; increment r4
0059 F5F0        62            mov b, a ; Preserve value of accumulator
005B             62            
005B 900003      62            mov dptr, #T_StuNum ; point to student number lookup table
005E EC          62            mov a, r4 ; Load input into accumulator
005F 93          62            movc a, @dptr+a ; Read from table
0060             62            
0060 F594        62            mov HEX3, a ; Display number
0062             62   
0062 E5F0        62            mov a, b ; Restore value of accumulator
0064 0C          63            inc r4 ; increment r4
0065 F5F0        64            mov b, a ; Preserve value of accumulator
0067             64            
0067 900003      64            mov dptr, #T_StuNum ; point to student number lookup table
006A EC          64            mov a, r4 ; Load input into accumulator
006B 93          64            movc a, @dptr+a ; Read from table
006C             64            
006C F58E        64            mov HEX4, a ; Display number
006E             64   
006E E5F0        64            mov a, b ; Restore value of accumulator
0070 0C          65            inc r4 ; increment r4
0071 F5F0        66            mov b, a ; Preserve value of accumulator
0073             66            
0073 900003      66            mov dptr, #T_StuNum ; point to student number lookup table
0076 EC          66            mov a, r4 ; Load input into accumulator
0077 93          66            movc a, @dptr+a ; Read from table
0078             66            
0078 F58F        66            mov HEX5, a ; Display number
007A             66   
007A E5F0        66            mov a, b ; Restore value of accumulator
007C             67            
007C             68            
007C             69   ENDTIME:         
007C 020020      70            ljmp Forever ; Repeat forever
007F             71   END
